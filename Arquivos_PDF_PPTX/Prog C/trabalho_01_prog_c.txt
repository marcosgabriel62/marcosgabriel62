#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<stdbool.h>
#include <locale.h> 



//para alterar o tamanho da matriz caso os dados sejam informados manualmente basta alterar a quantidade de dados no define para a largura/altura que for desejada
#define n 20

int variavel_apoio, para_baixo, para_direita, diagonal_direita, diagonal_esquerda, linha, coluna, valor_maximo=0;
bool sair_do_loop;

int main (void)

{
   setlocale(LC_ALL, "Portuguese");
  
  //caso queira incluir todos os valores manualmente comente ou descomente este trecho do código.
  //para teste você pode diminuir o numero de N.
  
  /*	
  int matriz[n][n];
  
  printf ("\nDigite valor para os elementos da matriz\n\n");
  
  for ( linha=0; linha<n; linha++ ){
  		for ( coluna=0; coluna<n; coluna++ )
    	{
      	printf ("\nElemento linha [%d] coluna [%d] = ", linha, coluna);
      	scanf ("%d", &variavel_apoio);
      	
      	if (variavel_apoio>0 && variavel_apoio<=99){
      		matriz[ linha ][ coluna ]=variavel_apoio;	
      	}
      	else
      	{
      		sair_do_loop=false;
      		do{	
      		printf("\nO valor deve estar entre 1 e 99. Favor tente novamente");		
      		printf ("\nElemento linha [%d] coluna[%d] = ", linha, coluna);		
      		scanf ("%d", &variavel_apoio);
				if (variavel_apoio>0 && variavel_apoio<=99){
				matriz[ linha ][ coluna ]=variavel_apoio;
				sair_do_loop=true;	
				}				
			}while(sair_do_loop!=true);
		}
		}
	}
	system("cls");
    /*
		
	//caso queira incluir todos os valores de uma vez basta comentar ou descomentar essa parte do código
	//abaixo uma matriz gerada por mim
	
	/*
	int matriz[n][n]={	
    	{10,12,55,23,24,55,92,55,1,25,13,55,42,57,99,13,12,27,55,9},
		{01,22,85,32,44,95,91,25,2,15,39,12,98,97,96,95,94,93,92,91},
		{01,02,03,04,5,22,44,54,45,15,35,99,47,27,22,12,28,52,66,4},
		{63,64,96,58,13,99,5,8,9,12,13,98,33,28,87,33,27,76,57,9},
		{10,12,55,23,24,55,92,55,1,25,13,55,42,57,99,13,12,27,55,9},
		{01,22,85,32,44,95,91,25,2,15,39,12,98,97,96,95,94,93,92,91},
		{01,02,03,04,5,22,44,54,45,15,35,99,47,27,22,12,28,52,66,4},
		{63,64,96,58,13,99,5,8,9,12,13,98,33,28,87,33,27,76,57,9},
		{10,12,55,23,24,55,92,55,1,25,13,55,42,57,99,13,12,27,55,9},
		{63,64,96,58,13,99,5,8,9,12,13,98,33,28,87,33,27,76,57,9},
		{01,02,03,04,5,22,44,54,45,15,35,99,47,27,22,12,28,52,66,4},
		{63,64,96,58,13,99,5,8,9,12,13,98,33,28,87,33,27,76,57,9},
		{10,12,55,23,24,55,92,55,1,25,13,55,42,57,99,13,12,27,55,9},
		{01,02,03,04,05,06,07,8,9,10,11,12,13,14,15,16,17,18,19,20},
		{01,02,03,04,5,22,44,54,45,15,35,99,47,27,22,12,28,52,66,4},
		{10,12,55,23,24,55,92,55,1,25,13,55,42,57,99,13,12,27,55,9},
		{01,22,85,32,44,95,91,25,2,15,39,12,98,97,96,95,94,93,92,91},
		{10,12,55,23,24,55,92,55,1,25,13,55,42,57,99,13,12,27,55,9},
		{01,02,03,04,5,22,44,54,45,15,35,99,47,27,22,12,28,52,66,4},
		{63,64,96,58,13,99,5,8,9,12,13,98,33,28,87,33,27,76,57,9},
  	};
    */
	
	
	//a matriz abaixo é a matriz do exercicio;
	
	
    int matriz[n][n]={
    	{8,2,22,97,38,15,0,40,0,75,4,5,7,78,52,12,50,77,91,8},
    	{49,49,99,40,17,81,18,57,60,87,17,40,98,43,69,48,4,56,62,0},
    	{81,49,31,73,55,79,14,29,93,71,40,67,53,88,30,3,49,13,36,65},
	    {52,70,95,23,4,60,11,42,69,24,68,56,1,32,56,71,37,2,36,91},
    	{22,31,16,71,51,67,63,89,41,92,36,54,22,40,40,28,66,33,13,80},
    	{24,47,32,60,99,3,45,2,44,75,33,53,78,36,84,20,35,17,12,50},
    	{32,98,81,28,64,23,67,10,26,38,40,67,59,54,70,66,18,38,64,70},
    	{67,26,20,68,2,62,12,20,95,63,94,39,63,8,40,91,66,49,94,21},
    	{24,55,58,5,66,73,99,26,97,17,78,78,96,83,14,88,34,89,63,72},
    	{21,36,23,9,75,0,76,44,20,45,35,14,0,61,33,97,34,31,33,95},
    	{78,17,53,28,22,75,31,67,15,94,3,80,4,62,16,14,9,53,56,92},
    	{16,39,5,42,96,35,31,47,55,58,88,24,0,17,54,24,36,29,85,57},
    	{86,56,0,48,35,71,89,7,5,44,44,37,44,60,21,58,51,54,17,58},
    	{19,80,81,68,5,94,47,69,28,73,92,13,86,52,17,77,4,89,55,40},
    	{4,52,8,83,97,35,99,16,7,97,57,32,16,26,26,79,33,27,98,66},
    	{88,36,68,87,57,62,20,72,3,46,33,67,46,55,12,32,63,93,53,69},
    	{4,42,16,73,38,25,39,11,24,94,72,18,8,46,29,32,40,62,76,36},
    	{20,69,36,41,72,30,23,88,34,62,99,69,82,67,59,85,74,4,36,16},
    	{20,73,35,29,78,31,90,1,74,31,49,71,48,86,81,16,23,57,5,54},
    	{1,70,54,71,83,51,54,69,16,92,33,48,61,43,52,1,89,19,67,48},
  	};
  	
  	
 	 int linha, coluna;
 	 int valor_maximo = 0;

  	for (linha = 0; linha < n-3; linha++) {
    		for (coluna = 0; coluna < n-3; coluna++){
     	   		para_baixo = matriz[linha][coluna] * matriz[linha][coluna+1] * matriz[linha][coluna+2] * matriz[linha][coluna+3];
      	   		 para_direita = matriz[coluna][linha] * matriz[coluna+1][linha] * matriz[coluna+2][linha] * matriz[coluna+3][linha];
            		diagonal_direita = matriz[linha][coluna] * matriz[linha+1][coluna+1] * matriz[linha+2][coluna+2] * matriz[linha+3][coluna+3];
            		diagonal_esquerda = matriz[linha][n-coluna-1] * matriz[linha+1][n-coluna-2] * matriz[linha+2][n-coluna-3] * matriz[linha+3][n-coluna-4];
           		valor_maximo = maximo(valor_maximo, maximo(para_baixo, maximo(para_direita, maximo(diagonal_direita, diagonal_esquerda))));
        	}
    	}

    printf("\nO valor máximo encontrado foi: %d\n", valor_maximo);
	return 0;
}

	int maximo(int valor_1, int valor_2){
  		if (valor_1 > valor_2){
  			return valor_1;
  			}else{
			return valor_2;  	
  			}
		}
